package files;

import io.restassured.RestAssured;
import io.restassured.filter.session.SessionFilter;
import io.restassured.path.json.JsonPath;

import static io.restassured.RestAssured.*;

import java.io.File;

public class JiraTest5 {
	
	
	
	public static void main(String[] args) {
		RestAssured.baseURI="http://localhost:8080";
		
		//create session
		SessionFilter session1=new SessionFilter();
		String response=given().header("Content-type", "application/json").body("{ \"username\": \"nirupa\", \r\n"
				+ "\"password\": \"1234\" }").log().all().filter(session1).when().post("/rest/auth/1/session")
		.then().log().all().extract().response().asString();
		
		String actualcomment="This comment added throug in final restapi automation code";
		//Add comment - issue created through postman and got the id for using here
		String commentresponse=given().pathParam("key","10109").header("Content-type", "application/json").body("{\r\n"
				+ "    \"body\": \""+actualcomment+"\",\r\n"
				+ "    \"visibility\": {\r\n"
				+ "        \"type\": \"role\",\r\n"
				+ "        \"value\": \"Administrators\"\r\n"
				+ "    }\r\n"
				+ "}").filter(session1).when().post("/rest/api/2/issue/{key}/comment")
		.then().log().all().assertThat().statusCode(201).extract().response().asString();
		JsonPath js=new JsonPath(commentresponse);
		String actualcommentid=js.getString("id");
		
		//Add attachment
		given().pathParam("key","10109").header("X-Atlassian-Token", "no-check").header("Content-type","multipart/form-data")
		.filter(session1)
		.multiPart("file",new File("jira.txt"))
		.when().post("/rest/api/2/issue/{key}/attachments").then().log().all().assertThat().statusCode(200);
		
		
		//Get issue
		String issuedetails=given().filter(session1).pathParam("key","10109").queryParams("fields","comment").log().all()
		.when().get("/rest/api/2/issue/{key}")
		.then().log().all().extract().response().asString();
		System.out.println(issuedetails);
		
		JsonPath js1=new JsonPath(issuedetails);
		int commentscount=js1.get("fields.comment.comments.size()");
		for(int i=0;i<commentscount;i++) {
			String commentid=js1.get("fields.comment.comments["+i+"].id").toString();
			if(commentid.equalsIgnoreCase(actualcommentid)) {
				String comment=js1.get("fields.comment.comments["+i+"].body").toString();
				
			}
		}
		if()
		
		
	}

}
